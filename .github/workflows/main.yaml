name: Deploy SpeechFeedback Service to EC2 # 워크플로우 이름 변경

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  
  # 이제 각 서비스별 이미지 이름을 env에서 명확히 정의합니다.
  NODEJS_DOCKER_IMAGE_NAME: hxnyiiy01/speechfeedback-nodejs
  FASTAPI_DOCKER_IMAGE_NAME: hxnyiiy01/speechfeedback-fastapi
  
  AWS_REGION: ap-southeast-2
  EC2_HOST: ${{ secrets.HOST }}
  EC2_USERNAME: ${{ secrets.USERNAME }}
  EC2_KEY: ${{ secrets.KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_TOKEN }}

      # --- Node.js 이미지 빌드 및 푸시 ---
      - name: Build and Push Node.js Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./nodejs
          file: ./nodejs/Dockerfile
          push: true
          tags: ${{ env.NODEJS_DOCKER_IMAGE_NAME }}:latest

      # --- FastAPI 이미지 빌드 및 푸시 ---
      - name: Build and Push FastAPI Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./python # FastAPI Dockerfile이 있는 경로
          file: ./python/Dockerfile # FastAPI Dockerfile의 파일명
          push: true
          tags: ${{ env.FASTAPI_DOCKER_IMAGE_NAME }}:latest

      # --- EC2로 docker-compose.yml 파일 복사 ---
      - name: Copy Docker Compose File to EC2
        uses: appleboy/scp-action@master # scp 액션 사용
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEY }}
          port: ${{ secrets.PORT }}
          source: "docker-compose.yml" # 로컬(GitHub Runner)의 docker-compose.yml 파일
          target: "/home/${{ env.EC2_USERNAME }}/" # EC2의 홈 디렉토리로 복사 (혹은 원하는 경로)
          # target: "/home/${{ env.EC2_USERNAME }}/your_app_folder/" # 만약 특정 앱 폴더에 넣고 싶다면

      # --- EC2에 배포 (Docker Compose 실행) ---
      - name: Deploy to EC2 with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "--- Deploying services with Docker Compose ---"
            
            # EC2에서 docker-compose.yml 파일이 복사된 디렉토리로 이동
            cd /home/${{ env.EC2_USERNAME }}/ # scp target 경로와 일치해야 함

            # EC2에 Docker Compose 설치 확인 및 설치 (필요시)
            if ! command -v docker-compose &> /dev/null
            then
                echo "Docker Compose not found, installing..."
                sudo apt-get update && sudo apt-get install -y docker-compose # Ubuntu 기준 (다른 OS면 변경)
            fi

            # 기존 서비스 중지 및 삭제
            docker-compose down || true
            
            # 최신 이미지 풀 (Docker Hub에서)
            docker-compose pull
            
            # 새 컨테이너 실행
            docker-compose up -d

            echo "--- Docker containers are up and running ---"
            echo "--- Cleaning up unused Docker images and volumes ---"
            docker system prune -a -f --volumes # 모든 사용되지 않는 이미지/컨테이너/볼륨 정리